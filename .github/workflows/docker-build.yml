# File: .github/workflows/docker-build.yml
# GitHub Actions Pipeline for Docker Builds - BMI Calculator

name: Docker Build and Push
on: push

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Frontend
        run: |
          echo "Building frontend Docker image..."
          docker build -f ./frontend/Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/bmi-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bmi-frontend:latest
          echo "Frontend image pushed successfully"
          
      - name: Build and Push Backend
        run: |
          echo "Building backend Docker image..."
          cd backend
          docker build -f ./backend/Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/bmi-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bmi-backend:latest
          echo "Backend image pushed successfully"
          
         # Optional: DB image if not using Render's managed DB
      - name: Build and Push DB
        run: |
            # Check for database Dockerfiles
            if [ -f "./docker/Dockerfile.prod" ]; then
            docker build -f ./database/Dockerfile.prod -t ${{ secrets.DOCKERHUB_USERNAME }}/bmi-db:latest ./docker
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bmi-db:latest
            elif [ -f "./docker/Dockerfile" ]; then
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/bmi-db:latest ./docker
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bmi-db:latest
            else
            echo "No database Dockerfile found, skipping DB image build"      